// <auto-generated />
using ButFirstCoffee.Data;
using ButFirstCoffee.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ButFirstCoffee.Data.Migrations
{
    [DbContext(typeof(CoffeeContext))]
    partial class CoffeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ButFirstCoffee.Domain.Beverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("DetailedDescription");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Beverages");
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.BeverageCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BeverageCategories");
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.BeverageSale", b =>
                {
                    b.Property<int>("BeverageId");

                    b.Property<int>("SaleId");

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.HasKey("BeverageId", "SaleId");

                    b.HasIndex("SaleId");

                    b.ToTable("BeverageSales");
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.Condiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("DetailedDescription");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Condiments");
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Completed");

                    b.Property<DateTime>("OrderDate");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BeverageId");

                    b.Property<string>("Description");

                    b.Property<int>("OrderId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("BeverageId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<decimal>("Percent");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.Beverage", b =>
                {
                    b.HasOne("ButFirstCoffee.Domain.BeverageCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.BeverageSale", b =>
                {
                    b.HasOne("ButFirstCoffee.Domain.Beverage", "Beverage")
                        .WithMany("BeverageSales")
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ButFirstCoffee.Domain.Sale", "Sale")
                        .WithMany("BeverageSales")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ButFirstCoffee.Domain.OrderItem", b =>
                {
                    b.HasOne("ButFirstCoffee.Domain.Beverage", "Beverage")
                        .WithMany()
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ButFirstCoffee.Domain.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
